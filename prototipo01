import 'package:flutter/material.dart';
import 'package:intl/intl.dart';

void main() {
  runApp(ArtistProfileApp());
}

class ArtistProfileApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Perfil do Artista',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(
          seedColor: Colors.deepPurple,
          secondary: Colors.amberAccent,
        ),
        useMaterial3: true,
        textTheme: const TextTheme(
          headlineLarge: TextStyle(fontSize: 32, fontWeight: FontWeight.bold, color: Colors.deepPurple),
          headlineMedium: TextStyle(fontSize: 24, fontWeight: FontWeight.bold, color: Colors.deepPurple),
          bodyLarge: TextStyle(fontSize: 16, color: Colors.black87),
          bodyMedium: TextStyle(fontSize: 14, color: Colors.black54),
        ),
      ),
      home: ArtistProfilePage(
        artistName: 'Luna Vortex',
        genre: 'Synthwave / Eletrônico',
        bio:
            'Luna Vortex é uma produtora e DJ internacionalmente reconhecida por suas batidas envolventes e estética retrofuturista. Sua carreira decolou com trilhas sonoras para jogos e filmes de ficção científica, misturando nostalgia dos anos 80 com tecnologia moderna.',
        albums: [
          'Neo Neon Dreams (2024)',
          'Códigos e Frequências (2021)',
          'Retro Atômico (2019)',
          'Sombras de Neon (EP - 2017)',
        ],
        featuredSong: 'Canção Destaque: "Céu de Leds"',
        awards: [
          'Melhor Álbum Eletrônico (2023)',
          'DJ Revelação Internacional (2022)',
        ],
        socialLinks: {
          'Instagram': 'https://instagram.com/luna_vortex_music',
          'Spotify': 'https://spotify.com/artist/luna_vortex',
          'YouTube': 'https://youtube.com/c/LunaVortexOfficial',
          'Twitter': 'https://twitter.com/luna_vortex',
          'Website': 'https://www.lunavortex.com',
        },
        fansCount: 845320,
      ),
    );
  }
}

class ArtistProfilePage extends StatelessWidget {
  final String artistName;
  final String genre;
  final String bio;
  final List<String> albums;
  final String featuredSong;
  final List<String> awards;
  final Map<String, String> socialLinks;
  final int fansCount;

  const ArtistProfilePage({
    super.key,
    required this.artistName,
    required this.genre,
    required this.bio,
    required this.albums,
    required this.featuredSong,
    required this.awards,
    required this.socialLinks,
    required this.fansCount,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Perfil de $artistName'),
        backgroundColor: Theme.of(context).colorScheme.primary,
        foregroundColor: Theme.of(context).colorScheme.onPrimary,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              children: [
                const CircleAvatar(
                  radius: 60,
                  backgroundImage: NetworkImage('https://i.pravatar.cc/300?img=68'),
                ),
                const SizedBox(width: 16),
                Expanded(
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(artistName, style: Theme.of(context).textTheme.headlineLarge),
                      const SizedBox(height: 4),
                      Text(
                        genre,
                        style: Theme.of(context).textTheme.bodyLarge!.copyWith(
                              color: Theme.of(context).colorScheme.secondary,
                              fontWeight: FontWeight.bold,
                            ),
                      ),
                      const SizedBox(height: 8),
                      Row(
                        children: [
                          const Icon(Icons.verified, color: Colors.blue, size: 16),
                          const SizedBox(width: 4),
                          Text('Verificado', style: Theme.of(context).textTheme.bodyMedium),
                        ],
                      ),
                    ],
                  ),
                ),
              ],
            ),
            const SizedBox(height: 24),
            Text('Biografia', style: Theme.of(context).textTheme.headlineMedium),
            const SizedBox(height: 8),
            Text(bio, style: Theme.of(context).textTheme.bodyLarge, textAlign: TextAlign.justify),
            const SizedBox(height: 24),
            Text('Álbuns', style: Theme.of(context).textTheme.headlineMedium),
            const SizedBox(height: 8),
            SizedBox(
              height: 100,
              child: ListView.builder(
                scrollDirection: Axis.horizontal,
                itemCount: albums.length,
                itemBuilder: (context, index) {
                  return Card(
                    child: Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Center(
                        child: Text(albums[index], textAlign: TextAlign.center),
                      ),
                    ),
                  );
                },
              ),
            ),
            const SizedBox(height: 16),
            Text(
              featuredSong,
              style: Theme.of(context).textTheme.bodyLarge!.copyWith(fontStyle: FontStyle.italic),
            ),
            const SizedBox(height: 24),
            if (awards.isNotEmpty) ...[
              Text('Prêmios', style: Theme.of(context).textTheme.headlineMedium),
              const SizedBox(height: 8),
              ...awards.map((award) => ListTile(
                    leading: const Icon(Icons.military_tech, color: Colors.amber),
                    title: Text(award, style: Theme.of(context).textTheme.bodyLarge),
                  )),
            ],
            const SizedBox(height: 24),
            Text('Redes Sociais', style: Theme.of(context).textTheme.headlineMedium),
            const SizedBox(height: 8),
            Wrap(
              spacing: 12,
              runSpacing: 12,
              children: socialLinks.entries.map((socialLink) {
                IconData icon;
                switch (socialLink.key.toLowerCase()) {
                  case 'instagram':
                    icon = Icons.camera_alt;
                    break;
                  case 'spotify':
                    icon = Icons.music_note;
                    break;
                  case 'youtube':
                    icon = Icons.play_arrow;
                    break;
                  case 'twitter':
                    icon = Icons.flutter_dash;
                    break;
                  case 'website':
                    icon = Icons.web;
                    break;
                  default:
                    icon = Icons.link;
                }
                return Column(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    IconButton(
                      icon: Icon(icon, color: Theme.of(context).colorScheme.primary),
                      tooltip: socialLink.key,
                      onPressed: () {
                        print('Abrir ${socialLink.key}: ${socialLink.value}');
                      },
                    ),
                    Text(socialLink.key, style: Theme.of(context).textTheme.bodyMedium),
                  ],
                );
              }).toList(),
            ),
            const SizedBox(height: 24),
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                const Icon(Icons.people, color: Colors.grey),
                const SizedBox(width: 8),
                Text(
                  '${NumberFormat.compact().format(fansCount)} Fãs',
                  style: Theme.of(context).textTheme.bodyMedium,
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}
